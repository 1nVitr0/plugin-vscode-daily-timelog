{
  "name": "daily-timelog",
  "displayName": "Daily Time Log",
  "description": "Simple tool set for tracking, logging and planning your daily tasks",
  "icon": "resources/icon.png",
  "author": "1nVitr0",
  "license": "MIT",
  "version": "0.1.2",
  "repository": {
    "type": "git",
    "url": "https://github.com/1nVitr0/plugin-vscode-daily-timelog"
  },
  "publisher": "1nVitr0",
  "categories": [
    "Other",
    "Programming Languages",
    "Linters"
  ],
  "keywords": [
    "time log",
    "planning",
    "tasks",
    "todo",
    "time tracker"
  ],
  "engines": {
    "vscode": "^1.52.0"
  },
  "activationEvents": [
    "onLanguage:yaml",
    "onCommand:daily-timelog.startNewDay"
  ],
  "preview": true,
  "main": "./client/out/extension",
  "contributes": {
    "commands": [
      {
        "command": "daily-timelog.startNewDay",
        "title": "Daily Time Log: Start a new Day"
      },
      {
        "command": "daily-timelog.generateTaskList",
        "title": "Daily Time Log: Generate Task List"
      },
      {
        "command": "daily-timelog.generateSummary",
        "title": "Daily Time Log: Generate Summary"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Daily Time Log",
      "properties": {
        "daily-timelog.commonTasks": {
          "scope": "resources",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "Organization",
            "Daily",
            "Meeting",
            "Refactoring",
            "Code Review",
            "Checking Mails"
          ],
          "description": "List of common tasks"
        },
        "daily-timelog.commonBreaks": {
          "scope": "resources",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "Lunch",
            "Breakfast",
            "Coffee",
            "Personal"
          ],
          "description": "List of common break types"
        },
        "daily-timelog.taskGroups": {
          "scope": "resources",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "organisation",
            "review",
            "evaluation",
            "meeting",
            "reseach",
            "programming"
          ],
          "description": "Common task groups"
        },
        "daily-timelog.ticketPrefixes": {
          "scope": "resources",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "List of common ticket prefixes (e.g. Jira Style board ids)"
        },
        "daily-timelog.customParams": {
          "scope": "resources",
          "type": "array",
          "items": {
            "type": "object",
            "description": "the declaration of a custom prop",
            "properties": {
              "name": {
                "type": "string",
                "description": "name (or key) of the task"
              },
              "required": {
                "type": "boolean",
                "description": "wether the prop is required"
              },
              "suggestions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "list of suggestions displayed for values inside the param"
              },
              "template": {
                "type": "string",
                "description": "rendering template used when generating"
              },
              "type": {
                "type": "string",
                "enum": [
                  "array",
                  "string",
                  "date",
                  "time",
                  "duration",
                  "task"
                ],
                "description": "the type of the custom prop"
              }
            },
            "required": [
              "name",
              "type"
            ],
            "additionalProperties": false
          },
          "description": "list of custom properties that can be included in the timelog",
          "default": [
            {
              "name": "goals",
              "type": "array",
              "template": "{{nextIndex}}. {{value}}"
            },
            {
              "name": "achievements",
              "type": "array",
              "template": "{{nextIndex}}. {{value}}"
            }
          ]
        },
        "daily-timelog.beginDayMessage": {
          "scope": "resource",
          "type": "string",
          "default": "Let's start!",
          "description": "Name of first entry in timeLog (mnot included in summary)"
        },
        "daily-timelog.defaultBreakName": {
          "scope": "resource",
          "type": "string",
          "default": "Breaks",
          "description": "Default name for breaks, used when combining breaks"
        },
        "daily-timelog.workDayHours": {
          "scope": "resources",
          "type": "number",
          "default": 8,
          "description": "Default number of hours in a work day"
        },
        "daily-timelog.includeBreaksInTotal": {
          "scope": "resources",
          "type": "boolean",
          "default": false,
          "description": "include break time in totals"
        },
        "daily-timelog.dateFormat": {
          "scope": "resources",
          "type": "string",
          "default": "YYYY-MM-DD",
          "description": "date format- supports the  formats supplied by moment.js"
        },
        "daily-timelog.summaryDateFormat": {
          "scope": "resources",
          "type": "string",
          "default": "YYYY-MM-DD",
          "description": "date format- supports the  formats supplied by moment.js"
        },
        "daily-timelog.timeFormat": {
          "scope": "resources",
          "type": "string",
          "default": "HH:mm",
          "description": "time format- supports the  formats supplied by moment.js"
        },
        "daily-timelog.durationFormat": {
          "scope": "resources",
          "type": "string",
          "default": "h\\h ?m\\m?",
          "description": "duration format - standard double curly braces notation. Possible values are H: total hours (float), M: total minutes, h: floored hours, m: remaining minutes"
        },
        "daily-timelog.durationPrecision": {
          "scope": "resources",
          "type": "integer",
          "default": 15,
          "description": "precision the durations will be rounded to"
        },
        "daily-timelog.durationRounding": {
          "scope": "resources",
          "type": "string",
          "enum": [
            "round",
            "floor",
            "ceil"
          ],
          "default": "round",
          "description": "type of rounding for precisions, 'floor' and 'ceil' can lead to strange results due to balancing"
        },
        "daily-timelog.minimumDuration": {
          "scope": "resources",
          "type": "integer",
          "default": 15,
          "description": "minimum duration for a task to be included in summary"
        },
        "daily-timelog.floorBelowMinimumDuration": {
          "scope": "resources",
          "type": "boolean",
          "default": false,
          "description": "floor tasks below minimum duration to 0 (mutually exclusive to forceMinimumDuration)"
        },
        "daily-timelog.forceMinimumDuration": {
          "scope": "resources",
          "type": "boolean",
          "default": true,
          "description": "force tasks to have minimum duration (mutually exclusive to floorBelowMinimumDuration)"
        },
        "daily-timelog.includeTotals": {
          "scope": "resources",
          "type": "boolean",
          "default": true,
          "description": "include totals"
        },
        "daily-timelog.progressCompleteText": {
          "scope": "resources",
          "type": "string",
          "default": "DONE",
          "description": "text shown at 100% progress if {{percentageOrText}} is specified in progressFormat"
        },
        "daily-timelog.progressFormat": {
          "scope": "resources",
          "type": "string",
          "default": "{{percentageOrText}}",
          "description": "progress - available params are {{value}}, {{percentage}}, {{percentageOnly}}, {{percentageOrText}} and {{percentageOnlyOrText}}"
        },
        "daily-timelog.workDayHoursStart": {
          "scope": "resources",
          "type": "string",
          "format": "HH:mm",
          "pattern": "((0\\d)|(1[0-9])|(2[0-3])):([0-5]\\d)",
          "default": "08:00",
          "description": "usual start of work day"
        },
        "daily-timelog.workDayHoursEnd": {
          "scope": "resources",
          "type": "string",
          "format": "HH:mm",
          "pattern": "((0\\d)|(1[0-9])|(2[0-3])):([0-5]\\d)",
          "default": "17:00",
          "description": "usual end of work day"
        },
        "daily-timelog.autoGenerateOverview": {
          "scope": "resources",
          "type": "boolean",
          "default": true,
          "description": "auto generate overview on save"
        },
        "daily-timelog.includeBreaks": {
          "scope": "resources",
          "type": "boolean",
          "default": false,
          "description": "include breaks in tasklist or summary"
        },
        "daily-timelog.combineBreaks": {
          "scope": "resources",
          "type": "boolean",
          "default": true,
          "description": "combine breaks in summary or tasklist"
        },
        "daily-timelog.taskListTitle": {
          "scope": "resources",
          "type": "string",
          "default": "Today's Tasks",
          "description": "title of task list"
        },
        "daily-timelog.taskListDurationFormat": {
          "scope": "resources",
          "type": "string",
          "default": "- {{task.ticket ? '[' + task.ticket + '] ' : ''}}{{task.name}}: {{duration}}",
          "description": "duration format - standard double curly braces notation. Possible values are task.name: task name, duration: duration, error: rounding error"
        },
        "daily-timelog.taskListStructure": {
          "scope": "resources",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "*{{taskListTitle}} - {{date}}*",
            "",
            "{{estimatedDurations}}",
            "",
            "= {{estimatedTotals}}"
          ],
          "description": "structure of task list. Parameters include all the settings of this extension as well as {{ date }}: the date supplied, {{ durations }}: list of task durations, {{ estimatedDurations }}: list of estimated task durations, {{ totals }}: formatted totals, {{ estimatedTotals }}: formatted estimated totals"
        },
        "daily-timelog.newDayTemplate": {
          "scope": "resources",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "date: {{currentDate}}*",
            "",
            "################################### PLANNING ###################################",
            "",
            "plannedTasks:",
            "  -",
            "",
            "################################### TIME LOG ###################################",
            "",
            "timeLog:",
            "  - \"{{workDayHoursStart}}\": !begin {{beginDayMessage}}"
          ],
          "description": "structure of new day. Parameters include all the settings of this extension as well as {{currentDate}} and {{currentTime}}"
        },
        "daily-timelog.summaryTitle": {
          "scope": "resources",
          "type": "string",
          "default": "Today's Summary",
          "description": "title of summary"
        },
        "daily-timelog.summaryDurationFormat": {
          "scope": "resources",
          "type": "string",
          "default": "- {{task.ticket ? '[' + task.ticket + '] ' : ''}}{{task.name}}: {{duration}} {{progress ? '(' + progress + ')' : ''}}",
          "description": "duration format - standard double curly braces notation. Possible values are {{ task.name }}: task name, {{ task.type }}: task type, {{ duration }}: duration, {{ error }}: rounding error"
        },
        "daily-timelog.summaryStructure": {
          "scope": "resources",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "*{{summaryTitle}} - {{date}}*",
            "",
            "{{durations}}",
            "",
            "= {{totals}}"
          ],
          "description": "structure of summary. Parameters include all the settings of this extension as well as {{ date }}: the date supplied, {{ durations }}: list of task durations, {{ estimatedDurations }}: list of estimated task durations, {{ totals }}: formatted totals, {{ estimatedTotals }}: formatted estimated totals"
        },
        "daily-timelog.overviewTitle": {
          "scope": "resources",
          "type": "string",
          "default": "",
          "description": "title of overview"
        },
        "daily-timelog.overviewStructure": {
          "scope": "resources",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "'{{overviewTitle ? overviewTitle + ' - '' : ''}}{{ date }}'",
            "",
            "{{taskList}}",
            "{{summary}}"
          ],
          "description": "structure of overview"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run webpack",
    "webpack": "npm run clean && webpack --mode production --config ./shared/webpack.config.js && webpack --mode production --config ./client/webpack.config.js && webpack --mode production --config ./server/webpack.config.js",
    "webpack:dev": "npm run clean && webpack --mode none --config ./shared/webpack.config.js && webpack --mode none --config ./client/webpack.config.js && webpack --mode none --config ./server/webpack.config.js",
    "compile": "tsc -b",
    "watch": "tsc -b -w",
    "postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
    "test": "sh ./scripts/e2e.sh",
    "clean": "rimraf shared/out && rimraf client/out && rimraf server/out",
    "schemas": "node scripts/schemas.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/lodash": "^4.14.168",
    "@types/mocha": "^8.0.3",
    "@types/module-alias": "^2.0.0",
    "@types/node": "^12.12.0",
    "@types/vscode": "^1.52.0",
    "@typescript-eslint/parser": "^2.3.0",
    "eslint": "^6.4.0",
    "merge-options": "^3.0.4",
    "mocha": "^8.1.1",
    "rimraf": "^2.6.3",
    "ts-loader": "^8.0.15",
    "typescript": "^4.0.2",
    "webpack": "^5.20.2",
    "webpack-cli": "^4.5.0"
  },
  "dependencies": {
    "glob": "^7.1.6",
    "lodash": "^4.17.19",
    "moment": "^2.29.1",
    "typescript-json-schema": "^0.48.0",
    "yaml": "https://github.com/1nVitr0/yaml/releases/download/v2.0.0-4/yaml.tar.gz"
  }
}
